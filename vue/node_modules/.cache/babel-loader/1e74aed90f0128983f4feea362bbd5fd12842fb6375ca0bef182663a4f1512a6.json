{"ast":null,"code":"/*引入axios*/\nimport axios from 'axios';\nconst request = axios.create({\n  baseURL: 'http://127.0.0.1:8000/dj_api/',\n  // 基础路径,将统一的部分全部封装\n  timeout: 5000,\n  headers: {\n    'Content-Type': 'application/octet-stream',\n    'Access-Control-Allow-Origin': \"*\"\n  },\n  withCredentials: true // 表示请求可以携带cookie\n});\n\nrequest.interceptors.request.use(config => {\n  config.url = API_URL[config.url]; // 2-这一步修改url地址,后面再解释\n  // 请求携带token\n  // if(token) config.headers.token = token\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n//前端采用export.default，在写后端代码时用module.export\nexport default request;","map":{"version":3,"names":["axios","request","create","baseURL","timeout","headers","withCredentials","interceptors","use","config","url","API_URL","error","Promise","reject"],"sources":["E:/code/web/web01/vue/src/utils/request.js"],"sourcesContent":["/*引入axios*/\r\nimport axios from 'axios'\r\nconst request = axios.create({\r\n    baseURL: 'http://127.0.0.1:8000/dj_api/', // 基础路径,将统一的部分全部封装\r\n    timeout: 5000,\r\n    headers: {\r\n        'Content-Type': 'application/octet-stream',\r\n        'Access-Control-Allow-Origin':\"*\",\r\n    },\r\n    withCredentials: true // 表示请求可以携带cookie\r\n})\r\nrequest.interceptors.request.use((config) => {\r\n    config.url = API_URL[config.url] // 2-这一步修改url地址,后面再解释\r\n    // 请求携带token\r\n    // if(token) config.headers.token = token\r\n    return config;\r\n},(error) => {\r\n    return Promise.reject(error);\r\n});\r\n//前端采用export.default，在写后端代码时用module.export\r\nexport default request"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,MAAMC,OAAO,GAAGD,KAAK,CAACE,MAAM,CAAC;EACzBC,OAAO,EAAE,+BAA+B;EAAE;EAC1CC,OAAO,EAAE,IAAI;EACbC,OAAO,EAAE;IACL,cAAc,EAAE,0BAA0B;IAC1C,6BAA6B,EAAC;EAClC,CAAC;EACDC,eAAe,EAAE,IAAI,CAAC;AAC1B,CAAC,CAAC;;AACFL,OAAO,CAACM,YAAY,CAACN,OAAO,CAACO,GAAG,CAAEC,MAAM,IAAK;EACzCA,MAAM,CAACC,GAAG,GAAGC,OAAO,CAACF,MAAM,CAACC,GAAG,CAAC,EAAC;EACjC;EACA;EACA,OAAOD,MAAM;AACjB,CAAC,EAAEG,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CAAC,CAAC;AACF;AACA,eAAeX,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}